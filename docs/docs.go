// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "ovr.shevtsov@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "get authorization token",
                "parameters": [
                    {
                        "description": "user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token response",
                        "schema": {
                            "$ref": "#/definitions/api.tokenResponse"
                        }
                    }
                }
            }
        },
        "/api/keys": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "api key"
                ],
                "summary": "get user api keys",
                "responses": {
                    "200": {
                        "description": "api keys",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.ApiKey"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "api key"
                ],
                "summary": "add new api key",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ApiKeyInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "api token",
                        "schema": {
                            "$ref": "#/definitions/api.tokenResponse"
                        }
                    }
                }
            }
        },
        "/api/keys/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "api key"
                ],
                "summary": "delete api key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "api key id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/new-password": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "change password for the account",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.PasswordChange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/projects": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "get projects for user",
                "responses": {
                    "200": {
                        "description": "projects",
                        "schema": {
                            "$ref": "#/definitions/api.ProjectsResponse"
                        }
                    }
                }
            }
        },
        "/api/projects/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "delete project by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/projects/{id}/sessions": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "get project recorded sessions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pagination",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "sessions",
                        "schema": {
                            "$ref": "#/definitions/api.ProjectSessions"
                        }
                    }
                }
            }
        },
        "/api/projects/{id}/share/{email}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "project"
                ],
                "summary": "share project with another user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "project id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "other account email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "account"
                ],
                "summary": "register new account",
                "parameters": [
                    {
                        "description": "user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token response",
                        "schema": {
                            "$ref": "#/definitions/api.tokenResponse"
                        }
                    }
                }
            }
        },
        "/api/session": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "add new session",
                "parameters": [
                    {
                        "description": "input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.SessionInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "session created",
                        "schema": {
                            "$ref": "#/definitions/api.AddSessionResponse"
                        }
                    }
                }
            }
        },
        "/api/session/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "spec"
                ],
                "summary": "get spec executions by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "spec id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pagination",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "session",
                        "schema": {
                            "$ref": "#/definitions/entities.Session"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "delete session by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/api/session/{id}/next": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "session"
                ],
                "summary": "get next spec file to be executed",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "specify machine id",
                        "name": "machineId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "specify status of previous spec execution",
                        "name": "previousStatus",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "next",
                        "schema": {
                            "$ref": "#/definitions/api.NextSpecResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.AddSessionResponse": {
            "type": "object",
            "properties": {
                "projectId": {
                    "type": "string"
                },
                "projectName": {
                    "type": "string"
                },
                "sessionId": {
                    "type": "string"
                }
            }
        },
        "api.ApiKeyInput": {
            "type": "object",
            "required": [
                "expireAt",
                "name"
            ],
            "properties": {
                "expireAt": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.NextSpecResponse": {
            "type": "object",
            "properties": {
                "next": {
                    "type": "string"
                }
            }
        },
        "api.PasswordChange": {
            "type": "object",
            "required": [
                "currentPassword",
                "newPassword"
            ],
            "properties": {
                "currentPassword": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                }
            }
        },
        "api.ProjectSessions": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Session"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "api.ProjectsResponse": {
            "type": "object",
            "properties": {
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Project"
                    }
                }
            }
        },
        "api.SessionInput": {
            "type": "object",
            "required": [
                "projectName",
                "specFiles"
            ],
            "properties": {
                "projectName": {
                    "type": "string"
                },
                "specFiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.tokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "entities.ApiKey": {
            "type": "object",
            "properties": {
                "expireAt": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "entities.Execution": {
            "type": "object",
            "properties": {
                "duration": {
                    "type": "integer"
                },
                "estimatedDuration": {
                    "type": "integer"
                },
                "finishedAt": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "machineId": {
                    "type": "string"
                },
                "sessionId": {
                    "type": "string"
                },
                "specId": {
                    "type": "string"
                },
                "specName": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "entities.Project": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entities.Session": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "integer"
                },
                "executions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Execution"
                    }
                },
                "finishedAt": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "projectId": {
                    "type": "string"
                },
                "startedAt": {
                    "type": "integer"
                }
            }
        },
        "users.User": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 6
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Split specs API",
	Description:      "service for distributing test files among processes/machines/containers",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
